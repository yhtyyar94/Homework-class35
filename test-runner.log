2021-12-29 02:11:55 info: ------------------------------------------
2021-12-29 02:11:55 info: >>> Running Unit Test `ex4-observable` <<<
2021-12-29 02:11:55 info: ------------------------------------------
2021-12-29 02:12:01 info: All unit tests passed.
2021-12-29 02:12:08 info: All steps were completed successfully
2021-12-30 05:13:45 info: ------------------------------------------------------
2021-12-30 05:13:45 info: >>> Running Unit Test `ex1-doubleEvenNumbers.test` <<<
2021-12-30 05:13:45 info: ------------------------------------------------------
2021-12-30 05:13:51 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-doubleEvenNumbers.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex1-doubleEvenNumbers.test.js
  × doubleEvenNumbers should take the even numbers and double them (13 ms)

  ● doubleEvenNumbers should take the even numbers and double them

    expect(received).toEqual(expected) // deep equality

    - Expected  - 2
    + Received  + 4

      Array [
    -   4,
    -   8,
    +   2,
    +   false,
    +   6,
    +   false,
      ]

      22 |   const actual = doubleEvenNumbers([1, 2, 3, 4]);
      23 |   const expected = [4, 8];
    > 24 |   expect(actual).toEqual(expected);
         |                  ^
      25 | });
      26 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex1-doubleEvenNumbers.test.js:24:18)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 total
Snapshots:   0 total
Time:        0.94 s
Ran all test suites matching /ex1-doubleEvenNumbers.test.js/i.
2021-12-30 05:15:13 info: ------------------------------------------------------
2021-12-30 05:15:13 info: >>> Running Unit Test `ex1-doubleEvenNumbers.test` <<<
2021-12-30 05:15:13 info: ------------------------------------------------------
2021-12-30 05:15:17 info: All unit tests passed.
2021-12-30 05:15:23 info: All steps were completed successfully
2021-12-30 05:59:24 info: -------------------------------------------------
2021-12-30 05:59:24 info: >>> Running Unit Test `ex2-mondaysWorth.test` <<<
2021-12-30 05:59:24 info: -------------------------------------------------
2021-12-30 05:59:28 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-mondaysWorth.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js
  computeEarnings
    √ should take two parameters (4 ms)
    × should compute the earnings as a formatted Euro amount (5 ms)

  ● computeEarnings › should compute the earnings as a formatted Euro amount

    expect(received).toBe(expected) // Object.is equality

    Expected: "€187.50"
    Received: 450

      50 |     const result = computeEarnings(mondayTasks, hourlyRate);
      51 |     const expected = '€187.50';
    > 52 |     expect(result).toBe(expected);
         |                    ^
      53 |   });
      54 | });
      55 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:52:20)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 passed, 2 total
Snapshots:   0 total
Time:        0.868 s
Ran all test suites matching /ex2-mondaysWorth.test.js/i.
2021-12-30 05:59:31 error: *** ESLint Report ***

ex2-mondaysWorth.test.js
  34:33  error  'hourlyRate' is defined but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2021-12-30 06:00:00 info: -------------------------------------------------
2021-12-30 06:00:00 info: >>> Running Unit Test `ex2-mondaysWorth.test` <<<
2021-12-30 06:00:00 info: -------------------------------------------------
2021-12-30 06:00:04 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-mondaysWorth.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js
  computeEarnings
    √ should take two parameters (4 ms)
    × should compute the earnings as a formatted Euro amount (7 ms)

  ● computeEarnings › should compute the earnings as a formatted Euro amount

    expect(received).toBe(expected) // Object.is equality

    Expected: "€187.50"
    Received: 11250

      50 |     const result = computeEarnings(mondayTasks, hourlyRate);
      51 |     const expected = '€187.50';
    > 52 |     expect(result).toBe(expected);
         |                    ^
      53 |   });
      54 | });
      55 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:52:20)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 passed, 2 total
Snapshots:   0 total
Time:        0.921 s, estimated 1 s
Ran all test suites matching /ex2-mondaysWorth.test.js/i.
2021-12-30 06:01:26 info: -------------------------------------------------
2021-12-30 06:01:26 info: >>> Running Unit Test `ex2-mondaysWorth.test` <<<
2021-12-30 06:01:26 info: -------------------------------------------------
2021-12-30 06:01:30 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-mondaysWorth.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js
  computeEarnings
    √ should take two parameters (5 ms)
    × should compute the earnings as a formatted Euro amount (10 ms)

  ● computeEarnings › should compute the earnings as a formatted Euro amount

    expect(received).toBe(expected) // Object.is equality

    Expected: "€187.50"
    Received: "€187.5"

      50 |     const result = computeEarnings(mondayTasks, hourlyRate);
      51 |     const expected = '€187.50';
    > 52 |     expect(result).toBe(expected);
         |                    ^
      53 |   });
      54 | });
      55 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:52:20)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 passed, 2 total
Snapshots:   0 total
Time:        0.935 s, estimated 1 s
Ran all test suites matching /ex2-mondaysWorth.test.js/i.
2021-12-30 06:02:17 info: Disclaimer turned off
2021-12-30 06:02:30 info: -------------------------------------------------
2021-12-30 06:02:30 info: >>> Running Unit Test `ex2-mondaysWorth.test` <<<
2021-12-30 06:02:30 info: -------------------------------------------------
2021-12-30 06:02:34 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-mondaysWorth.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js
  computeEarnings
    √ should take two parameters (12 ms)
    × should compute the earnings as a formatted Euro amount (3 ms)

  ● computeEarnings › should compute the earnings as a formatted Euro amount

    TypeError: result.fix is not a function

      36 |   const result = durations.reduce((prev, current) => prev + current) / 60 * hourlyRate
      37 |
    > 38 |   return `€${result.fix(2)}`
         |                     ^
      39 | }
      40 |
      41 | // ! Unit tests (using Jest)

      at computeEarnings (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:38:21)
      at Object.<anonymous> (1-JavaScript/Week4/homework/ex2-mondaysWorth.test.js:50:20)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 passed, 2 total
Snapshots:   0 total
Time:        1.087 s
Ran all test suites matching /ex2-mondaysWorth.test.js/i.
2021-12-30 06:03:36 info: -------------------------------------------------
2021-12-30 06:03:36 info: >>> Running Unit Test `ex2-mondaysWorth.test` <<<
2021-12-30 06:03:36 info: -------------------------------------------------
2021-12-30 06:03:40 info: All unit tests passed.
2021-12-30 06:03:45 info: All steps were completed successfully
2021-12-30 06:12:31 info: -------------------------------------------------
2021-12-30 06:12:31 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2021-12-30 06:12:31 info: -------------------------------------------------
2021-12-30 06:12:36 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    √ should take two parameters (3 ms)
    × should not modify the original `fruitBasket` array (8 ms)
    × should return a new array that does not include the unwanted `lemon` (4 ms)

  ● sanitizeFruitBasket › should not modify the original `fruitBasket` array

    expect(received).toBe(expected) // Object.is equality

    If it should pass with deep equality, replace "toBe" with "toStrictEqual"

    Expected: ["apple", "lemon", "grapefruit", "lemon", "banana", "watermelon", "lemon"]
    Received: serializes to the same string

      43 |     const originalFruitBasketContents = [...fruitBasket];
      44 |     const expected = fruitBasket
    > 45 |     expect(originalFruitBasketContents).toBe(expected);
         |                                         ^
      46 |   });
      47 |
      48 |   test('should return a new array that does not include the unwanted `lemon`', () => {

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:45:41)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).toBe(expected) // Object.is equality

    - Expected  - 3
    + Received  + 0

      Array [
        "apple",
    -   "lemon",
        "grapefruit",
    -   "lemon",
        "banana",
        "watermelon",
    -   "lemon",
      ]

      48 |   test('should return a new array that does not include the unwanted `lemon`', () => {
      49 |     const result = sanitizeFruitBasket(fruitBasket, 'lemon')
    > 50 |     expect(result).toBe(fruitBasket);
         |                    ^
      51 |   });
      52 | });
      53 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:50:20)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 1 passed, 3 total
Snapshots:   0 total
Time:        0.908 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2021-12-30 06:14:11 info: -------------------------------------------------
2021-12-30 06:14:11 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2021-12-30 06:14:11 info: -------------------------------------------------
2021-12-30 06:14:16 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    √ should take two parameters (3 ms)
    √ should not modify the original `fruitBasket` array
    × should return a new array that does not include the unwanted `lemon` (10 ms)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).toBe(expected) // Object.is equality

    - Expected  - 3
    + Received  + 0

      Array [
        "apple",
    -   "lemon",
        "grapefruit",
    -   "lemon",
        "banana",
        "watermelon",
    -   "lemon",
      ]

      48 |   test('should return a new array that does not include the unwanted `lemon`', () => {
      49 |     const result = sanitizeFruitBasket(fruitBasket, 'lemon')
    > 50 |     expect(result).toBe(fruitBasket);
         |                    ^
      51 |   });
      52 | });
      53 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:50:20)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        1.019 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2021-12-30 06:15:12 info: -------------------------------------------------
2021-12-30 06:15:12 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2021-12-30 06:15:12 info: -------------------------------------------------
2021-12-30 06:15:16 error: *** Unit Test Error Report ***

Command failed: npx jest ex3-lemonAllergy.test.js --colors
 FAIL  1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js
  sanitizeFruitBasket
    √ should take two parameters (3 ms)
    √ should not modify the original `fruitBasket` array (1 ms)
    × should return a new array that does not include the unwanted `lemon` (8 ms)

  ● sanitizeFruitBasket › should return a new array that does not include the unwanted `lemon`

    expect(received).toBe(expected) // Object.is equality

    Expected: "[\"apple\",\"lemon\",\"grapefruit\",\"lemon\",\"banana\",\"watermelon\",\"lemon\"]"
    Received: "[\"apple\",\"grapefruit\",\"banana\",\"watermelon\"]"

      48 |   test('should return a new array that does not include the unwanted `lemon`', () => {
      49 |     const result = sanitizeFruitBasket(fruitBasket, 'lemon')
    > 50 |     expect(JSON.stringify(result)).toBe(JSON.stringify(fruitBasket));
         |                                    ^
      51 |   });
      52 | });
      53 |

      at Object.<anonymous> (1-JavaScript/Week4/homework/ex3-lemonAllergy.test.js:50:36)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 2 passed, 3 total
Snapshots:   0 total
Time:        0.909 s, estimated 1 s
Ran all test suites matching /ex3-lemonAllergy.test.js/i.
2021-12-30 06:16:43 info: -------------------------------------------------
2021-12-30 06:16:43 info: >>> Running Unit Test `ex3-lemonAllergy.test` <<<
2021-12-30 06:16:43 info: -------------------------------------------------
2021-12-30 06:16:47 info: All unit tests passed.
2021-12-30 06:16:54 info: All steps were completed successfully
2022-01-16 08:52:33 info: ----------------------------------------
2022-01-16 08:52:33 info: >>> Running Unit Test `ex1-bookList` <<<
2022-01-16 08:52:33 info: ----------------------------------------
2022-01-16 08:52:47 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-bookList.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex1-bookList.test.js (7.195 s)
  Generated HTML
    × HTML should be syntactically valid (278 ms)
    √ should have all TODO comments removed (1 ms)
    √ should contain a <ul> that is a child of <div id="bookList"> (2 ms)
    √ should contain a <ul> with 3 <li> elements (2 ms)
    √ should contain an <li> with title and author for each book of the `myBooks` array (3 ms)
    √ should contain an <img> element for each book (1 ms)

  ● Generated HTML › HTML should be syntactically valid

    expect(received).toBe(expected) // Object.is equality

    Expected: ""
    Received: "
    inline
      10:237  error  <img> is missing required \"alt\" attribute  wcag/h37
      10:466  error  <img> is missing required \"alt\" attribute  wcag/h37
      10:686  error  <img> is missing required \"alt\" attribute  wcag/h37·
    ✖ 3 problems (3 errors, 0 warnings)
    "

      44 |   const { results } = htmlValidate.validateString(htmlText);
      45 |   const validationReport = stylish(results);
    > 46 |   expect(validationReport).toBe('');
         |                            ^
      47 | }
      48 |
      49 | module.exports = {

      at validateHTML (test-runner/jsdom-helpers.js:46:28)
      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex1-bookList.test.js:42:5)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 5 passed, 6 total
Snapshots:   0 total
Time:        7.413 s
Ran all test suites matching /ex1-bookList.test.js/i.
2022-01-16 08:54:01 info: ----------------------------------------
2022-01-16 08:54:01 info: >>> Running Unit Test `ex1-bookList` <<<
2022-01-16 08:54:01 info: ----------------------------------------
2022-01-16 08:54:11 info: All unit tests passed.
2022-01-16 08:54:19 info: All steps were completed successfully
2022-01-16 09:57:08 info: ---------------------------------------
2022-01-16 09:57:08 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-01-16 09:57:08 info: ---------------------------------------
2022-01-16 09:57:25 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js (8.441 s)
  Generated HTML
    √ should be syntactically valid (341 ms)
    √ should have all TODO comments removed (1 ms)
    √ the body font-family should be `Arial, sans-serif` (3 ms)
    × each <li> should have the CSS class `list-item` (9 ms)
    × each <li> should rendered red (148 ms)

  ● Generated HTML › each <li> should have the CSS class `list-item`

    expect(received).toBeTruthy()

    Received: false

      32 |     const nodeList = document.querySelectorAll('li');
      33 |     const classNames = [...nodeList].map((node) => node.className);
    > 34 |     expect(classNames.every((name) => name === 'list-item')).toBeTruthy();
         |                                                              ^
      35 |   });
      36 |
      37 |   test('each <li> should rendered red', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:34:62)

  ● Generated HTML › each <li> should rendered red

    expect(received).toBeTruthy()

    Received: false

      40 |       (node) => window.getComputedStyle(node).color
      41 |     );
    > 42 |     expect(colors.every((color) => color === 'red')).toBeTruthy();
         |                                                      ^
      43 |   });
      44 | });
      45 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:42:54)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 3 passed, 5 total
Snapshots:   0 total
Time:        8.783 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
2022-01-16 09:57:36 error: *** Spell Checker Report ***

ex2-aboutMe/index.js:15:52 - Unknown word (Yhtyyar)
ex2-aboutMe/index.js:16:52 - Unknown word (Kebap)
ex2-aboutMe/index.js:17:52 - Unknown word (Dronten)

2022-01-16 10:08:44 info: ---------------------------------------
2022-01-16 10:08:44 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-01-16 10:08:44 info: ---------------------------------------
2022-01-16 10:08:56 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-aboutMe.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js (6.654 s)
  Generated HTML
    √ should be syntactically valid (249 ms)
    √ should have all TODO comments removed (1 ms)
    √ the body font-family should be `Arial, sans-serif` (2 ms)
    √ each <li> should have the CSS class `list-item` (2 ms)
    × each <li> should rendered red (50 ms)

  ● Generated HTML › each <li> should rendered red

    expect(received).toBeTruthy()

    Received: false

      40 |       (node) => window.getComputedStyle(node).color
      41 |     );
    > 42 |     expect(colors.every((color) => color === 'red')).toBeTruthy();
         |                                                      ^
      43 |   });
      44 | });
      45 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex2-aboutMe.test.js:42:54)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        6.962 s, estimated 9 s
Ran all test suites matching /ex2-aboutMe.test.js/i.
2022-01-16 10:09:05 error: *** Spell Checker Report ***

ex2-aboutMe/index.js:15:52 - Unknown word (Yhtyyar)
ex2-aboutMe/index.js:16:52 - Unknown word (Kebap)
ex2-aboutMe/index.js:17:52 - Unknown word (Dronten)

2022-01-16 10:09:50 info: ---------------------------------------
2022-01-16 10:09:50 info: >>> Running Unit Test `ex2-aboutMe` <<<
2022-01-16 10:09:50 info: ---------------------------------------
2022-01-16 10:10:01 info: All unit tests passed.
2022-01-16 10:10:10 error: *** Spell Checker Report ***

ex2-aboutMe/index.js:15:52 - Unknown word (Yhtyyar)
ex2-aboutMe/index.js:16:52 - Unknown word (Kebap)
ex2-aboutMe/index.js:17:52 - Unknown word (Dronten)

2022-01-17 10:03:42 info: ------------------------------------------
2022-01-17 10:03:42 info: >>> Running Unit Test `ex3-hijackLogo` <<<
2022-01-17 10:03:42 info: ------------------------------------------
2022-01-17 10:03:48 info: All unit tests passed.
2022-01-17 10:03:56 error: *** Spell Checker Report ***

ex3-hijackLogo.js:11:42 - Unknown word (Xdpd)

2022-01-17 10:30:32 info: --------------------------------------------
2022-01-17 10:30:32 info: >>> Running Unit Test `ex4-whatsTheTime` <<<
2022-01-17 10:30:32 info: --------------------------------------------
2022-01-17 10:30:45 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-whatsTheTime.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex4-whatsTheTime.test.js (8.196 s)
  whatsTheTime
    √ HTML should be syntactically valid (215 ms)
    √ should have all TODO comments removed
    √ should use `setInterval()`
    √ should not call `setInterval()` more than once (2002 ms)
    × should use `window.onload` or `window.addEventListener()` for the `load` or `DOMContentLoaded` event (2 ms)
    √ `window.onload` or `window.addEventListener` should not call its event handler function (1 ms)

  ● whatsTheTime › should use `window.onload` or `window.addEventListener()` for the `load` or `DOMContentLoaded` event

    expect(received).toBeDefined()

    Received: undefined

      63 |
      64 |   test('should use `window.onload` or `window.addEventListener()` for the `load` or `DOMContentLoaded` event', () => {
    > 65 |     expect(state.onload).toBeDefined();
         |                          ^
      66 |   });
      67 |
      68 |   test('`window.onload` or `window.addEventListener` should not call its event handler function', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex4-whatsTheTime.test.js:65:26)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 5 passed, 6 total
Snapshots:   0 total
Time:        8.318 s
Ran all test suites matching /ex4-whatsTheTime.test.js/i.
2022-01-17 10:31:41 info: --------------------------------------------
2022-01-17 10:31:41 info: >>> Running Unit Test `ex4-whatsTheTime` <<<
2022-01-17 10:31:41 info: --------------------------------------------
2022-01-17 10:31:52 error: *** Unit Test Error Report ***

Command failed: npx jest ex4-whatsTheTime.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex4-whatsTheTime.test.js (7.444 s)
  whatsTheTime
    √ HTML should be syntactically valid (219 ms)
    √ should have all TODO comments removed (1 ms)
    √ should use `setInterval()` (1 ms)
    √ should not call `setInterval()` more than once (2013 ms)
    √ should use `window.onload` or `window.addEventListener()` for the `load` or `DOMContentLoaded` event (1 ms)
    × `window.onload` or `window.addEventListener` should not call its event handler function (2 ms)

  ● whatsTheTime › `window.onload` or `window.addEventListener` should not call its event handler function

    expect(received).not.toBeDefined()

    Received: true

      67 |
      68 |   test('`window.onload` or `window.addEventListener` should not call its event handler function', () => {
    > 69 |     expect(state.callError).not.toBeDefined();
         |                                 ^
      70 |   });
      71 | });
      72 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex4-whatsTheTime.test.js:69:33)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 5 passed, 6 total
Snapshots:   0 total
Time:        7.689 s, estimated 9 s
Ran all test suites matching /ex4-whatsTheTime.test.js/i.
2022-01-17 10:32:51 info: --------------------------------------------
2022-01-17 10:32:51 info: >>> Running Unit Test `ex4-whatsTheTime` <<<
2022-01-17 10:32:51 info: --------------------------------------------
2022-01-17 10:33:02 info: All unit tests passed.
2022-01-17 10:33:09 info: All steps were completed successfully
2022-01-17 01:24:01 info: ---------------------------------------
2022-01-17 01:24:01 info: >>> Running Unit Test `ex5-catWalk` <<<
2022-01-17 01:24:01 info: ---------------------------------------
2022-01-17 01:24:15 error: *** Unit Test Error Report ***

Command failed: npx jest ex5-catWalk.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex5-catWalk.test.js (6.967 s)
  catWalk
    √ HTML should be syntactically valid (245 ms)
    √ should have all TODO comments removed
    × should use `setInterval()` and/or `setTimeout()` (2 ms)
    √ should use `window.onload` or `window.addEventListener()` for the `load` or `DOMContentLoaded` event
    √ `window.onload` or `window.addEventListener` should not call its event handler function (1 ms)

  ● catWalk › should use `setInterval()` and/or `setTimeout()`

    expect(received).toBeDefined()

    Received: undefined

      46 |
      47 |   test('should use `setInterval()` and/or `setTimeout()`', () => {
    > 48 |     expect(state.timer).toBeDefined();
         |                         ^
      49 |   });
      50 |
      51 |   test('should use `window.onload` or `window.addEventListener()` for the `load` or `DOMContentLoaded` event', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex5-catWalk.test.js:48:25)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 4 passed, 5 total
Snapshots:   0 total
Time:        7.187 s
Ran all test suites matching /ex5-catWalk.test.js/i.
2022-01-17 01:25:31 info: ---------------------------------------
2022-01-17 01:25:31 info: >>> Running Unit Test `ex5-catWalk` <<<
2022-01-17 01:25:31 info: ---------------------------------------
2022-01-17 01:25:42 info: All unit tests passed.
2022-01-17 01:25:50 info: All steps were completed successfully
2022-01-17 01:36:00 info: ------------------------------------------
2022-01-17 01:36:00 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 01:36:00 info: ------------------------------------------
2022-01-17 01:36:06 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    √ should exist and be executable (2 ms)
    × a living cell with zero living neighbors should die and have its life time reset to zero (8 ms)
    × a living cell with one living neighbor should die and have its life time reset to zero (2 ms)
    × a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    × a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    × a living cell with four living neighbors should die and have its life time reset to zero (2 ms)
    √ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    √ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    √ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    × a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    √ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      70 |
      71 |     expect(midCell.alive).toBe(false);
    > 72 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      73 |   });
      74 |
      75 |   test('a living cell with two living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:72:30)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      92 |
      93 |     expect(midCell.alive).toBe(true);
    > 94 |     expect(midCell.lifeTime).toBe(2);
         |                              ^
      95 |   });
      96 |
      97 |   test('a living cell with three living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:94:30)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      115 |
      116 |     expect(midCell.alive).toBe(true);
    > 117 |     expect(midCell.lifeTime).toBe(2);
          |                              ^
      118 |   });
      119 |
      120 |   test('a living cell with four living neighbors should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:117:30)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      225 |
      226 |     expect(midCell.alive).toBe(true);
    > 227 |     expect(midCell.lifeTime).toBe(1);
          |                              ^
      228 |   });
      229 |
      230 |   test('a dead cell with four living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:227:30)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        1.339 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 02:36:56 info: ------------------------------------------
2022-01-17 02:36:56 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 02:36:56 info: ------------------------------------------
2022-01-17 02:37:03 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    √ should exist and be executable (11 ms)
    × a living cell with zero living neighbors should die and have its life time reset to zero (10 ms)
    × a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    × a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    × a living cell with three living neighbors should survive and have its life time incremented by one (2 ms)
    × a living cell with four living neighbors should die and have its life time reset to zero (2 ms)
    √ a dead cell with zero living neighbors should remain dead and have a life time of zero (3 ms)
    √ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    √ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    × a dead cell with three living neighbors should come alive and have its lifeTime reset to one (2 ms)
    √ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with zero living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      49 |
      50 |     expect(midCell.alive).toBe(false);
    > 51 |     expect(midCell.lifeTime).toBe(0);
         |                              ^
      52 |   });
      53 |
      54 |   test('a living cell with one living neighbor should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:51:30)

  ● Game Of Life: › a living cell with one living neighbor should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: undefined

      69 |     game.updateGrid();
      70 |
    > 71 |     expect(midCell.alive).toBe(false);
         |                           ^
      72 |     expect(midCell.lifeTime).toBe(0);
      73 |   });
      74 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:71:27)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      91 |     game.updateGrid();
      92 |
    > 93 |     expect(midCell.alive).toBe(true);
         |                           ^
      94 |     expect(midCell.lifeTime).toBe(2);
      95 |   });
      96 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:93:27)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      114 |     game.updateGrid();
      115 |
    > 116 |     expect(midCell.alive).toBe(true);
          |                           ^
      117 |     expect(midCell.lifeTime).toBe(2);
      118 |   });
      119 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:116:27)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      139 |
      140 |     expect(midCell.alive).toBe(false);
    > 141 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      142 |   });
      143 |
      144 |   test('a dead cell with zero living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:141:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      225 |
      226 |     expect(midCell.alive).toBe(true);
    > 227 |     expect(midCell.lifeTime).toBe(1);
          |                              ^
      228 |   });
      229 |
      230 |   test('a dead cell with four living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:227:30)

Test Suites: 1 failed, 1 total
Tests:       6 failed, 5 passed, 11 total
Snapshots:   0 total
Time:        1.9 s, estimated 2 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 02:38:58 info: ------------------------------------------
2022-01-17 02:38:58 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 02:38:58 info: ------------------------------------------
2022-01-17 02:39:04 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    √ should exist and be executable (5 ms)
    √ a living cell with zero living neighbors should die and have its life time reset to zero (13 ms)
    √ a living cell with one living neighbor should die and have its life time reset to zero (2 ms)
    × a living cell with two living neighbors should survive and have its life time incremented by one (7 ms)
    × a living cell with three living neighbors should survive and have its life time incremented by one (2 ms)
    √ a living cell with four living neighbors should die and have its life time reset to zero (2 ms)
    √ a dead cell with zero living neighbors should remain dead and have a life time of zero (2 ms)
    √ a dead cell with one living neighbor should remain dead and have a life time of zero (2 ms)
    √ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    × a dead cell with three living neighbors should come alive and have its lifeTime reset to one (3 ms)
    √ a dead cell with four living neighbors should remain dead and have a life time of zero (2 ms)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      92 |
      93 |     expect(midCell.alive).toBe(true);
    > 94 |     expect(midCell.lifeTime).toBe(2);
         |                              ^
      95 |   });
      96 |
      97 |   test('a living cell with three living neighbors should survive and have its life time incremented by one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:94:30)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      115 |
      116 |     expect(midCell.alive).toBe(true);
    > 117 |     expect(midCell.lifeTime).toBe(2);
          |                              ^
      118 |   });
      119 |
      120 |   test('a living cell with four living neighbors should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:117:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      225 |
      226 |     expect(midCell.alive).toBe(true);
    > 227 |     expect(midCell.lifeTime).toBe(1);
          |                              ^
      228 |   });
      229 |
      230 |   test('a dead cell with four living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:227:30)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 8 passed, 11 total
Snapshots:   0 total
Time:        2.129 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 02:40:06 info: ------------------------------------------
2022-01-17 02:40:06 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 02:40:06 info: ------------------------------------------
2022-01-17 02:40:12 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    √ should exist and be executable (3 ms)
    √ a living cell with zero living neighbors should die and have its life time reset to zero (4 ms)
    √ a living cell with one living neighbor should die and have its life time reset to zero (2 ms)
    √ a living cell with two living neighbors should survive and have its life time incremented by one (2 ms)
    × a living cell with three living neighbors should survive and have its life time incremented by one (8 ms)
    √ a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    √ a dead cell with zero living neighbors should remain dead and have a life time of zero
    √ a dead cell with one living neighbor should remain dead and have a life time of zero
    × a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    × a dead cell with three living neighbors should come alive and have its lifeTime reset to one (2 ms)
    √ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with three living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 1

      115 |
      116 |     expect(midCell.alive).toBe(true);
    > 117 |     expect(midCell.lifeTime).toBe(2);
          |                              ^
      118 |   });
      119 |
      120 |   test('a living cell with four living neighbors should die and have its life time reset to zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:117:30)

  ● Game Of Life: › a dead cell with two living neighbors should remain dead and have a life time of zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      202 |
      203 |     expect(midCell.alive).toBe(false);
    > 204 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      205 |   });
      206 |
      207 |   test('a dead cell with three living neighbors should come alive and have its lifeTime reset to one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:204:30)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      225 |
      226 |     expect(midCell.alive).toBe(true);
    > 227 |     expect(midCell.lifeTime).toBe(1);
          |                              ^
      228 |   });
      229 |
      230 |   test('a dead cell with four living neighbors should remain dead and have a life time of zero', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:227:30)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 8 passed, 11 total
Snapshots:   0 total
Time:        1.835 s, estimated 2 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 02:42:01 info: ------------------------------------------
2022-01-17 02:42:01 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 02:42:01 info: ------------------------------------------
2022-01-17 02:42:07 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    √ should exist and be executable (4 ms)
    √ a living cell with zero living neighbors should die and have its life time reset to zero (5 ms)
    √ a living cell with one living neighbor should die and have its life time reset to zero (2 ms)
    √ a living cell with two living neighbors should survive and have its life time incremented by one (1 ms)
    √ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    √ a living cell with four living neighbors should die and have its life time reset to zero (2 ms)
    √ a dead cell with zero living neighbors should remain dead and have a life time of zero (2 ms)
    √ a dead cell with one living neighbor should remain dead and have a life time of zero (2 ms)
    × a dead cell with two living neighbors should remain dead and have a life time of zero (5 ms)
    √ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (3 ms)
    √ a dead cell with four living neighbors should remain dead and have a life time of zero (3 ms)

  ● Game Of Life: › a dead cell with two living neighbors should remain dead and have a life time of zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      202 |
      203 |     expect(midCell.alive).toBe(false);
    > 204 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      205 |   });
      206 |
      207 |   test('a dead cell with three living neighbors should come alive and have its lifeTime reset to one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:204:30)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 10 passed, 11 total
Snapshots:   0 total
Time:        1.739 s, estimated 2 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 02:43:57 info: ------------------------------------------
2022-01-17 02:43:57 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 02:43:57 info: ------------------------------------------
2022-01-17 02:44:03 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    √ should exist and be executable (3 ms)
    √ a living cell with zero living neighbors should die and have its life time reset to zero (5 ms)
    √ a living cell with one living neighbor should die and have its life time reset to zero (2 ms)
    × a living cell with two living neighbors should survive and have its life time incremented by one (6 ms)
    √ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    × a living cell with four living neighbors should die and have its life time reset to zero (1 ms)
    √ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    √ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    √ a dead cell with two living neighbors should remain dead and have a life time of zero (1 ms)
    × a dead cell with three living neighbors should come alive and have its lifeTime reset to one (1 ms)
    √ a dead cell with four living neighbors should remain dead and have a life time of zero (1 ms)

  ● Game Of Life: › a living cell with two living neighbors should survive and have its life time incremented by one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      91 |     game.updateGrid();
      92 |
    > 93 |     expect(midCell.alive).toBe(true);
         |                           ^
      94 |     expect(midCell.lifeTime).toBe(2);
      95 |   });
      96 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:93:27)

  ● Game Of Life: › a living cell with four living neighbors should die and have its life time reset to zero

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: true

      138 |     game.updateGrid();
      139 |
    > 140 |     expect(midCell.alive).toBe(false);
          |                           ^
      141 |     expect(midCell.lifeTime).toBe(0);
      142 |   });
      143 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:140:27)

  ● Game Of Life: › a dead cell with three living neighbors should come alive and have its lifeTime reset to one

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      224 |     game.updateGrid();
      225 |
    > 226 |     expect(midCell.alive).toBe(true);
          |                           ^
      227 |     expect(midCell.lifeTime).toBe(1);
      228 |   });
      229 |

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:226:27)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 8 passed, 11 total
Snapshots:   0 total
Time:        2.062 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-17 02:44:21 info: ------------------------------------------
2022-01-17 02:44:21 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-17 02:44:21 info: ------------------------------------------
2022-01-17 02:44:26 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    √ should exist and be executable (2 ms)
    √ a living cell with zero living neighbors should die and have its life time reset to zero (4 ms)
    √ a living cell with one living neighbor should die and have its life time reset to zero (2 ms)
    √ a living cell with two living neighbors should survive and have its life time incremented by one (2 ms)
    √ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    √ a living cell with four living neighbors should die and have its life time reset to zero (5 ms)
    √ a dead cell with zero living neighbors should remain dead and have a life time of zero (1 ms)
    √ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    × a dead cell with two living neighbors should remain dead and have a life time of zero (5 ms)
    √ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (2 ms)
    √ a dead cell with four living neighbors should remain dead and have a life time of zero (2 ms)

  ● Game Of Life: › a dead cell with two living neighbors should remain dead and have a life time of zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      202 |
      203 |     expect(midCell.alive).toBe(false);
    > 204 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      205 |   });
      206 |
      207 |   test('a dead cell with three living neighbors should come alive and have its lifeTime reset to one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:204:30)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 10 passed, 11 total
Snapshots:   0 total
Time:        1.393 s, estimated 2 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-18 10:46:57 info: ------------------------------------------
2022-01-18 10:46:57 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-18 10:46:57 info: ------------------------------------------
2022-01-18 10:47:13 error: *** Unit Test Error Report ***

Command failed: npx jest ex6-gameOfLife.test.js --colors
 FAIL  2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js
  Game Of Life:
    √ should exist and be executable (3 ms)
    √ a living cell with zero living neighbors should die and have its life time reset to zero (5 ms)
    √ a living cell with one living neighbor should die and have its life time reset to zero (1 ms)
    √ a living cell with two living neighbors should survive and have its life time incremented by one (2 ms)
    √ a living cell with three living neighbors should survive and have its life time incremented by one (1 ms)
    √ a living cell with four living neighbors should die and have its life time reset to zero (2 ms)
    √ a dead cell with zero living neighbors should remain dead and have a life time of zero (2 ms)
    √ a dead cell with one living neighbor should remain dead and have a life time of zero (1 ms)
    × a dead cell with two living neighbors should remain dead and have a life time of zero (9 ms)
    √ a dead cell with three living neighbors should come alive and have its lifeTime reset to one (2 ms)
    √ a dead cell with four living neighbors should remain dead and have a life time of zero (2 ms)

  ● Game Of Life: › a dead cell with two living neighbors should remain dead and have a life time of zero

    expect(received).toBe(expected) // Object.is equality

    Expected: 0
    Received: 1

      202 |
      203 |     expect(midCell.alive).toBe(false);
    > 204 |     expect(midCell.lifeTime).toBe(0);
          |                              ^
      205 |   });
      206 |
      207 |   test('a dead cell with three living neighbors should come alive and have its lifeTime reset to one', () => {

      at Object.<anonymous> (2-Browsers/Week1/unit-tests/ex6-gameOfLife.test.js:204:30)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 10 passed, 11 total
Snapshots:   0 total
Time:        1.69 s, estimated 2 s
Ran all test suites matching /ex6-gameOfLife.test.js/i.
2022-01-18 10:49:06 info: ------------------------------------------
2022-01-18 10:49:06 info: >>> Running Unit Test `ex6-gameOfLife` <<<
2022-01-18 10:49:06 info: ------------------------------------------
2022-01-18 10:49:12 info: All unit tests passed.
2022-01-18 10:49:20 info: All steps were completed successfully
